LISTDIR  TITLE 'Extract directory information from PDS datasets'
*---------------------------------------------------------------------*
*                                                                     *
* Module Name:          LISTDIR                                       *
*                                                                     *
* Operating System:     z/OS 1.4                                      *
*                                                                     *
* Function:             This program is designed to extract data from *
*                       the diretcory of a PDS and return it to the   *
*                       caller.                                       *
*                                                                     *
* Purpose:              List contents of a pds directory.             *
*                                                                     *
* Module Type:          Program or Sub-Routine                        *
*                                                                     *
* Language:             High Level Assembler                          *
*                                                                     *
* Attributes:           Key 8                                         *
*                       Problem State                                 *
*                       Re-Entrant                                    *
*                       AMODE(31)                                     *
*                       RMODE(31)                                     *
*                       BAKR/PR                                       *
*                       ISPF Environment                              *
*                                                                     *
* Entry point:          LISTDSI                                       *
*                                                                     *
* Input Parms: (PGM)    DDname of dataset to list directory of        *
* Input Parms: (SUB)    W1 --> INIT/DATA/TERM                         *
*                       W2 --> Data Buffer                            *
*                                                                     *
* Input DD:             None                                          *
*                                                                     *
* Output DD:            SYSPRINT                                      *
*                       The SYSPRINT file contains the catalog data   *
*                                                                     *
* Return codes:         Zero                                          *
*                                                                     *
* Abend codes:          None                                          *
*                                                                     *
* Register Usage:       R0  - Work                                    *
*                       R1  - Work                                    *
*                       R2  - Work                                    *
*                       R3  - Work                                    *
*                       R4  - Work                                    *
*                       R5  - Work                                    *
*                       R6  - Work                                    *
*                       R7  - Work                                    *
*                       R8  - Work                                    *
*                       R9  - Secondary Sub-Routine Return Address    *
*                       R10 - Primary Sub-Routine Return Address      *
*                       R11 - Work                                    *
*                       R12 - Base Register #1                        *
*                       R13 - Working Storage Base Register           *
*                       R14 - Return Address and Work                 *
*                       R15 - Entry Point, Return Code and Work       *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* Author:               Paul Gillis, P. C. Link Pty. Ltd.             *
*                                                                     *
* Change activity:                                                    *
*                                                                     *
* V01    04/08/2008     Initial Version                               *
*                                                                     *
*---------------------------------------------------------------------*
                                       SPACE 1
LISTDIR  CSECT
LISTDIR  AMODE 31
LISTDIR  RMODE 24
                                       SPACE 1
         USING LISTDIR,R15
         B     SKIPEYE                 ===> Skip the Eyeball
WSLENGTH DC    A(GSLENG)               Working STorage Length
EYEBALL  DC    CL28'LISTDIR  V01 &SYSDATC &SYSTIME'
SKIPEYE  DS    0H
         BAKR  R14,0
         LAE   R12,0(R15,0)            Set up Base Reg (GR and AR)
         DROP  R15
         USING LISTDIR,R12
         TM    0(R1),X'80'             Standard Parameter List
         BO    SKIPPARM                ===> Yes, I'm a standard program
                                       SPACE 1
         L     R2,4(R1)                Pointer to obtained storage
         L     R13,0(R2)               A(obtained storage)
         USING GS,R13
         L     R2,0(R1)                Save the Parameter Register
         MVC   CALLPARM,0(R2)          First character of 1st parm
         B     SKIPF1SA                Skip standard stuff
                                       SPACE 1
SKIPPARM DS    0H
         L     R2,0(R1)                Save the Parameter Register
         L     R0,WSLENGTH             Storage Length
         STORAGE OBTAIN,LENGTH=(0),LOC=BELOW,BNDRY=PAGE
         LR    R13,R1                  Address the work Area
         LR    R0,R1                   Clear obtained storage
         L     R1,WSLENGTH             Clear obtained storage
         SR    R15,R15                 Clear obtained storage
         MVCL  R0,R14                  Clear obtained storage
         MVC   F1SA,=C'F1SA'           Indicate BAKR/PR used
         MVI   PARM,C' '               Clear the PARM field
         MVC   PARM+1(L'PARM-1),PARM   with blanks
         LH    R1,0(R2)                Length of parm field
         BCTR  R1,0                    Less one for EX MVC
         EX    R1,MVCPARM              Copy the parameter
                                       SPACE 1
SKIPF1SA DS    0H
                                       SPACE 1
*---------------------------------------------------------------------*
*        Determine order of processing                                *
*---------------------------------------------------------------------*
                                       SPACE 1
         CLI   CALLPARM,C'I'           Initialise data and open files
         BE    CALLINIT                ===> Yes, perform that action
         CLI   CALLPARM,C'D'           Extract a data record
         BE    CALLDATA                ===> Yes, perform that action
         CLI   CALLPARM,C'T'           Clean up and close files
         BE    CALLTERM                ===> Yes, perform that action

*---------------------------------------------------------------------*
*        Call each routine collectively                               *
*---------------------------------------------------------------------*
                                       SPACE 1
         BAL   R10,INIT                ===> Initialise and open files
CALLLOOP DS    0H
         BAL   R10,DATA                ===> Get data records
         LTR   R15,R15                 EOD?
         BZ    CALLLOOP                ===> No, keep looping
         BAL   R10,TERM                ===> Clean up and close files
         L     R0,WSLENGTH             Obtained storage length
         LR    R1,R13                  Obtained storage address
         STORAGE RELEASE,LENGTH=(0),ADDR=(1)
         XR    R15,R15                 Set Return Code
         PR    ,                       Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        Call each routine individually                               *
*---------------------------------------------------------------------*
                                       SPACE 1
CALLINIT DS    0H
         BAL   R10,INIT                ===> Initialise and open files
         PR    ,                       Return to caller
                                       SPACE 1
CALLDATA DS    0H
         BAL   R10,DATA                ===> Get data records
         PR    ,                       Return to caller
                                       SPACE 1
CALLTERM DS    0H
         BAL   R10,TERM                ===> Clean up and close files
         PR    ,                       Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        INIT: Initialise the routine                                 *
*---------------------------------------------------------------------*
                                       SPACE 1
INIT     DS    0H
         CLI   CALLPARM,0              Sub or Std?
         BNE   INIT0010                ===> Sub, skip SYSPRINT
         MVC   SYSPRINT,SYSPRINTC      Move DCB below the line
         MVC   SYSPRINTE,SYSPRINTEC    Move DCBE below the line
         LA    R1,SYSPRINTE            A(DCBE)
         ST    R1,SYSPRINT             And save it in the DCB
         XC    SYSPRINTO,SYSPRINTO     Zero the list
         OI    SYSPRINTO,X'80'         Indicate last in the list
         OPEN  (SYSPRINT,(OUTPUT)),MODE=31,MF=(E,SYSPRINTO)
INIT0010 DS    0H
                                       SPACE 1
*---------------------------------------------------------------------*
*        INIT: Initialise the PDS Directory                           *
*---------------------------------------------------------------------*
                                       SPACE 1
         MVC   DIRECT,DIRECTC          Move DCB below the line
         MVC   DIRECTE,DIRECTEC        Move DCBE below the line
         LA    R1,DIRECTE              A(DCBE)
         ST    R1,DIRECT               And save it in the DCB
         LA    R14,DIRECT              A(DCB)
         USING IHADCB,R14
         LA    R6,JFCBAREA             Address the JFCB
         USING JFCB,R6
         ST    R6,JEXLST               Save in the exit list
         MVI   JEXLST,X'87'            Insert the JFCB call
         LA    R1,JEXLST               A(Exit List)
         STCM  R1,7,DCBEXLSA           And save it in the DCB
         DROP  R14
         XC    DIRECTO,DIRECTO         Zero the list
         OI    DIRECTO,X'80'           Indicate last in the list
         RDJFCB DIRECT,MF=(E,DIRECTO)
         LTR   R15,R15                 Read OK?
         BNZ   ERROR#02                ===> No, Abend
         LA    R14,DIRECT              A(DCB)
         USING IHADCB,R14
         XR    R1,R1                   Zero R1
         STCM  R1,7,DCBEXLSA           And save it in the DCB
         XC    DIRECTO,DIRECTO         Zero the list
         OI    DIRECTO,X'80'           Indicate last in the list
         OPEN  (DIRECT,(INPUT)),MODE=31,MF=(E,DIRECTO)
         TM    DIRECT+DCBOFLGS-IHADCB,X'10'
         BZ    ERROR#01
                                       SPACE 1
         MVI   RECORD,C' '             Clear the output record
         MVC   RECORD+1(L'RECORD-1),RECORD
         MVC   DSNEQ,=C'DSN='
         MVC   VOLEQ,=C'VOL='
         MVC   DSN,JFCBDSNM
         MVC   VOL,JFCBVOLS
         PUT   SYSPRINT,RECORD
         MVI   RECORD,C' '             Clear the output record
         MVC   RECORD+1(L'RECORD-1),RECORD
         DROP  R6
                                       SPACE 1
*        LOOP THROUGH THE DIRECTORY
                                       SPACE 1
UNLOD020 DS    0H
         GET   DIRECT,DIRECTIN
         LA    R8,DIRECTIN+2
         USING PDS2,R8
         LA    R9,DIRECTIN
         AH    R9,DIRECTIN
UNLOD030 DS    0H
         CLC   PDS2NAME,=8X'FF'        Member name all FFs?
         BE    UNLOD110                ===> yes, we are done
UNLOD031 DS    0H
         MVI   RECORD,C' '             Clear the record for output
         MVC   RECORD+1(L'RECORD-1),RECORD
         MVC   MEMBER,PDS2NAME         Save Member Name
         TM    PDS2INDC,PDS2ALIS       Is this an alias?
         BZ    UNLOD032
         MVC   TRUENAME,=CL8'ALIAS'    It's an alias
UNLOD032 DS    0H
         NI    PDS2INDC,X'1F'          AND THE DIRECTORY FLAGS
         CLI   PDS2INDC,X'0F'          ISPF Statistics?
         BE    UNLODFV                 ===> Yes, print ISPF stats
         CLI   PDS2INDC,X'00'          No ISPF Statistics?
         BE    UNLODFV                 ===> Yes, Print member name
         CLI   PDS2INDC,X'17'          No ISPF Statistics? But what?
         BE    UNLODFV                 ===> Yes, Print member name
UNLODU   DS    0H
         BAL   R11,PRINTU              ===> Print the directory
         B     UNLOD105                ===> Skip
UNLODFV  DS    0H
         BAL   R11,PRINTFV             ===> Print the directory
UNLOD105 DS    0H
         PUT   SYSPRINT,RECORD         Output the record
UNLOD106 DS    0H
         SR    R15,R15                 CLEAR REG15
         IC    R15,PDS2INDC            INSERT INTO REG15
         AR    R15,R15                 DOUBLE REG15
         LA    R8,12(R15,R8)           POINT REG10 TO NEXT MEMBER
         CR    R8,R9                   COMPARE WITH DIRECTORY LENGTH
         BNL   UNLOD020                GET ANOTHER DIRECTORY RECORD
         B     UNLOD030                CHECK CURRENT MEMBER FOR EOF.
                                       SPACE 3
UNLOD110 DS    0H
         XR    R15,R15                 Zero rc from init every time
         BR    R10                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        DATA: Get next entry from the PDS                            *
*---------------------------------------------------------------------*
                                       SPACE 1
DATA     DS    0H
         LA    R15,16                  RC=16 from data every time
         BR    R10                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        TERM: Free up PDS resources                                  *
*---------------------------------------------------------------------*
                                       SPACE 1
TERM     DS    0H
         CLI   CALLPARM,0              Sub or Std?
         BNE   TERM0010                ===> Sub, skip SYSPRINT
         CLOSE SYSPRINT,MODE=31,MF=(E,SYSPRINTO)
TERM0010 DS    0H
         CLOSE DIRECT,MODE=31,MF=(E,DIRECTO)
         BR    R10                     ===> Return to caller
                                       SPACE 1
ERROR#01 ABEND 1,DUMP
ERROR#02 ABEND 2,DUMP
                                       SPACE 1
*---------------------------------------------------------------------*
*        PRINTFV: Output print data for Load Module Library           *
*---------------------------------------------------------------------*
                                       SPACE 1
PRINTFV  DS    0H
         CLI   PDS2INDC,X'00'          No ISPF Statistics?
         BE    PRINTFV9                ===> Yes, Print member name
         CLI   PDS2INDC,X'17'          No ISPF Statistics? But what?
         BE    PRINTFV9                ===> Yes, Print member name
                                       SPACE 1
*        UNPK  WORK(3),PDS3VERN(2)     Version
*        TR    WORK(2),TRTABLE-240
         XR    R14,R14
         ICM   R14,1,PDS3VERN
         CVD   R14,DB
         UNPK  WORK(3),DB+6(2)
         OI    WORK+2,X'F0'
         MVC   VER,WORK+1
         MVI   DOT1,C'.'
                                       SPACE 1
*        UNPK  WORK(3),PDS3MODN(2)     Modification
*        TR    WORK(2),TRTABLE-240
         XR    R14,R14
         ICM   R14,1,PDS3MODN
         CVD   R14,DB
         UNPK  WORK(3),DB+6(2)
         OI    WORK+2,X'F0'
         MVC   MOD,WORK+1
                                       SPACE 1
         UNPK  WORK(9),PDS3CDAT(5)     Create Date
         TR    WORK(8),TRTABLE-240
         MVC   CDATE,WORK
                                       SPACE 1
         CLC   CDATE,=C'00'            Century = 19
         BE    CENT1
         MVC   CDATE(2),=C'20'
         B     CENT2
CENT1    DS    0H
         MVC   CDATE(2),=C'19'
CENT2    DS    0H
                                       SPACE 1
         UNPK  WORK(9),PDS3MDAT(5)     Update Date
         TR    WORK(8),TRTABLE-240
         MVC   UPDATE,WORK
                                       SPACE 1
         CLC   UPDATE,=C'00'           Century = 19
         BE    CENT3
         MVC   UPDATE(2),=C'20'
         B     CENT4
CENT3    DS    0H
         MVC   UPDATE(2),=C'19'
CENT4    DS    0H
                                       SPACE 1
         UNPK  WORK(3),PDS3HH(2)       Update Time HH
         TR    WORK(2),TRTABLE-240
         MVC   HH,WORK
         MVI   COLON1,C':'
                                       SPACE 1
         UNPK  WORK(3),PDS3MM(2)       Update Time MM
         TR    WORK(2),TRTABLE-240
         MVC   MM,WORK
         MVI   COLON2,C':'
                                       SPACE 1
         UNPK  WORK(3),PDS3SECS(2)     Update Time SS
         TR    WORK(2),TRTABLE-240
         MVC   SS,WORK
                                       SPACE 1
*        UNPK  WORK(5),PDS3LINE(3)     Lines
*        TR    WORK(4),TRTABLE-240
         XR    R14,R14
         ICM   R14,3,PDS3LINE          Lines Updated
         CVD   R14,DB
         UNPK  WORK(5),DB+5(3)
         OI    WORK+4,X'F0'
         MVC   LINES,WORK
                                       SPACE 1
         XR    R14,R14
         ICM   R14,3,PDS3INIT          Lines Initial
         CVD   R14,DB
         UNPK  WORK(5),DB+5(3)
         OI    WORK+4,X'F0'
         MVC   LINEINIT,WORK
                                       SPACE 1
         XR    R14,R14
         ICM   R14,3,PDS3MOD           Lines Updated
         CVD   R14,DB
         UNPK  WORK(5),DB+5(3)
         OI    WORK+4,X'F0'
         MVC   LINEMOD,WORK
                                       SPACE 1
         MVC   USERID,PDS3USER
                                       SPACE 1
                                       SPACE 1
*        PROCESS THE NEXT MEMBER
PRINTFV9 DS    0H
         BR    R11                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        PRINTU: Output print data for Load Module Library            *
*---------------------------------------------------------------------*
                                       SPACE 1
PRINTU   DS    0H
                                       SPACE 1
         UNPK  WORK(7),PDS2STOR(4)     Module Size
         TR    WORK(6),TRTABLE-240
         MVC   SIZE,WORK
                                       SPACE 1
         TM    PDS2ATR1,PDS2RENT       Re-Entrant
         BZ    PRINT010
         MVC   RN,=C'RN'               Mark it so
PRINT010 DS    0H
         TM    PDS2ATR1,PDS2REUS       Re-usable
         BZ    PRINT015
         MVC   RU,=C'RU'               Mark it so
PRINT015 DS    0H
         TM    PDS2ATR1,PDS2OVLY       Overlay
         BZ    PRINT020
         MVC   OV,=C'OV'               Mark it so
PRINT020 DS    0H
         TM    PDS2ATR1,PDS2LOAD       Only Loadable
         BZ    PRINT025
         MVC   OL,=C'OL'               Mark it so
PRINT025 DS    0H
         TM    PDS2ATR1,PDS2SCTR       Scatter
         BZ    PRINT030
         MVC   SC,=C'SC'               Mark it so
PRINT030 DS    0H
         TM    PDS2ATR1,PDS2EXEC       Executable
         BO    PRINT035
         MVC   NX,=C'NX'               Mark it not so
                                       SPACE 1
PRINT035 DS    0H
         TM    PDS2FTB2,PDSMAMOD       AMODE
         BZ    PRINTA24
         BO    PRINTANY
         TM    PDS2FTB2,BIT6
         BO    PRINTA31
         MVC   AM,=C' 64'              AM=64
         B     PRINT040
PRINTA24 DS    0H
         MVC   AM,=C' 24'              AM=24
         B     PRINT040
PRINTA31 DS    0H
         MVC   AM,=C' 31'              AM=31
         B     PRINT040
PRINTANY DS    0H
         MVC   AM,=C'ANY'              AM=Any
         B     PRINT040
                                       SPACE 1
PRINT040 DS    0H
         MVC   RM,=C' 24'
         TM    PDS2FTB2,PDSLRMOD       RMODE
         BZ    PRINT045
         MVC   RM,=C'ANY'
                                       SPACE 1
PRINT045 DS    0H
         TM    PDS2ATR2,PDS2REFR       Refreshable
         BZ    PRINT050
         MVC   RF,=C'RF'
                                       SPACE 1
PRINT050 DS    0H
         LA    R7,PDSBCLN(R8)          Next offset
         TM    PDS2ATR1,PDS2SCTR       Scatter
         BZ    PRINT055
         LA    R7,PDSS01LN(R7)         Next offset
PRINT055 DS    0H
         TM    PDS2INDC,PDS2ALIS       Alias
         BZ    PRINT060
         DROP  R8
         USING PDSS02,R7
         MVC   TRUENAME,PDS2MNM
         LA    R7,PDSS02LN(R7)         Next offset
PRINT060 DS    0H
         DROP  R7
         USING PDS2,R8
         TM    PDS2FTB1,PDS2SSI        SSI Info present
         BZ    PRINT065
         DROP  R8
         LR    R14,R7
         XR    R15,R15
         SRDA  R14,1
         LTR   R15,R15
         BZ    PRINT061
         LA    R7,1(R7)                Up R7 by 1
PRINT061 DS    0H
         USING PDSS03,R7
         UNPK  WORK(9),PDSSSIWD(5)     SSI Information Word
         TR    WORK(8),TRTABLE-240
         MVC   SSI,WORK
         LA    R7,PDSS03LN(R7)         Next offset
PRINT065 DS    0H
         DROP  R7
         USING PDS2,R8
         TM    PDS2FTB1,PDSAPFLG       APF is valid
         BZ    PRINT070
         DROP  R8
         USING PDSS04,R7
         UNPK  WORK(3),PDSAPFAC(2)     APF Code
         TR    WORK(2),TRTABLE-240
         MVC   AC,WORK
         LA    R7,PDSS04LN(R7)         Next offset
PRINT070 DS    0H
         DROP  R7
                                       SPACE 1
*        PROCESS THE NEXT MEMBER
         BR    R11                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        Constants and Literals                                       *
*---------------------------------------------------------------------*
                                       SPACE 1
SYSPRINTC DCB  MACRF=PM,DSORG=PS,DDNAME=SYSPRINT,RECFM=FB,             *
               LRECL=80,DCBE=SYSPRINTEC
SYSPRINTL  EQU *-SYSPRINTC
SYSPRINTEC DCBE RMODE31=BUFF
SYSPRINTEL EQU *-SYSPRINTEC
                                       SPACE 1
DIRECTC  DCB   DDNAME=SYSUT1,DEVD=DA,EODAD=UNLOD110,MACRF=(GM),        *
               DSORG=PS,RECFM=F,LRECL=256,BLKSIZE=256,DCBE=DIRECTEC
DIRECTL  EQU   *-DIRECTC
DIRECTEC DCBE  RMODE31=BUFF
DIRECTEL EQU   *-DIRECTEC
                                       SPACE 1
TRTABLE  DC    C'0123456789ABCDEF'     Translate Table
         LTORG ,
         CNOP  0,8                     Terminate on a Double Word Bdy.
                                       SPACE 1
*---------------------------------------------------------------------*
*        Working Storage                                              *
*---------------------------------------------------------------------*
                                       SPACE 1
MVCPARM  MVC   PARM(*-*),2(R2)         Save the parm field
         LTORG ,
         CNOP  0,8                     Finish on DB boundary
                                       SPACE 1
*---------------------------------------------------------------------*
*        Working Storage                                              *
*---------------------------------------------------------------------*
                                       SPACE 1
GS       DSECT
SAVEAREA DS    F                       Save area for called routines
F1SA     DS    F                       F1SA indicates BAKR/PR used
         DS    16F                     GPR save area
                                       SPACE 1
DB       DS    D                       Double Work Work Area * 1
WORK     DS    2D                      Double Work Work Area * 2
PARM     DS    CL8                     PARM passed by direct caller
                                       SPACE 1
RECORD   DS    CL255                   Output Record
         ORG   RECORD
MEMBER   DS    CL8                     Member Name
         DS    C
TRUENAME DS    CL8                     Alias True Name Entry
         DS    C
SIZE     DS    CL6                     Module Size
         DS    C
AC       DS    CL2                     Module Auth Code
         DS    C
AM       DS    CL3                     Module Amode
         DS    C
RM       DS    CL3                     Module Rmode
         DS    C
RF       DS    CL2                     Module Attribute Refr
         DS    C
RN       DS    CL2                     Module Attribute Rent
         DS    C
RU       DS    CL2                     Module Attribute Reus
         DS    C
NX       DS    CL2                     Module Attribute Not Executable
         DS    C
OV       DS    CL2                     Module Attribute Overlay
         DS    C
TE       DS    CL2                     Module Attribute Test
         DS    C
OL       DS    CL2                     Module Attribute Only Loadable
         DS    C
SC       DS    CL2                     Module Attribute Scatter
         DS    C
SSI      DS    CL8                     Module SSI
         ORG   ,
         ORG   SIZE
VER      DS    CL2                     Version
DOT1     DS    C
MOD      DS    CL2                     Modification
         DS    C
CDATE    DS    CL8                     Creation Date
         DS    C
UPDATE   DS    CL8                     Last Updated Date
         DS    C
HH       DS    CL2                     Last Updated Time HH
COLON1   DS    C
MM       DS    CL2                     Last Updated Time MM
COLON2   DS    C
SS       DS    CL2                     Last Updated Time SS
         DS    C
LINES    DS    CL5                     Lines
         DS    C
LINEINIT DS    CL5                     Lines Initial
         DS    C
LINEMOD  DS    CL5                     Lines Modified
         DS    C
USERID   DS    CL8                     Userid
         ORG   RECORD
VOLEQ    DS    CL4                     VOL=
VOL      DS    CL6
         DS    C
DSNEQ    DS    CL4                     DSN=
DSN      DS    CL44
         ORG   ,
                                       SPACE 1
SAVEREGS DS    2F                      Save R4 and R5 between calls
                                       SPACE 1
SYSPRINTO DS   D                       Open Parameter List
SYSPRINT  DS   CL(SYSPRINTL)           DCB
SYSPRINTE DS   CL(SYSPRINTEL)          DCBE
                                       SPACE 1
DIRECTO  DS    D                       Open Parameter List
DIRECT   DS    CL(DIRECTL)             DCB
DIRECTE  DS    CL(DIRECTEL)            DCBE
                                       SPACE 1
DIRECTIN DS    CL256                   Directory Buffer
                                       SPACE 1
EPLOC2   DS    F                       CSI Entry Point
CALLPARM DS    C                       1st character of 1st parm
RETURNCD DS    F                       Return Code
                                       SPACE 1
JEXLST   DS    X'87',AL3(JFCBAREA)     Exit List
JFCBAREA DS    XL176                   Area for the JFCB to be stored
                                       SPACE 1
         CNOP  0,8                     Terminate on a Double Word Bdy.
GSLENG   EQU   *-GS                    Length of Storage to obtain
                                       SPACE 1
*---------------------------------------------------------------------*
*        DSECTs                                                       *
*---------------------------------------------------------------------*
                                       SPACE 1
         TITLE 'CB-Map DCBD'
         DCBD  DEVD=DA,DSORG=PS
                                       SPACE 1
         TITLE 'CB-Map Directory'
         IHAPDS PDSBLDL=NO
         COPY  ISPFSTAT                ISPF Statistics
                                       SPACE 1
         TITLE 'YREGS'
         YREGS
                                       SPACE 1
JFCB     DSECT
         IEFJFCBN
         END
