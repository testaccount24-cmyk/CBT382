LISTVTOC TITLE 'List VTOC Contents'
*---------------------------------------------------------------------*
*                                                                     *
* Module Name:          LISTVTOC                                      *
*                                                                     *
* Operating System:     z/OS 1.4                                      *
*                                                                     *
* Function:             This program is designed to extract the VTOC  *
*                       records from a specified volume and then to   *
*                       output that data to a print file.             *
*                                                                     *
* Purpose:              List contents of a VTOC                       *
*                                                                     *
* Module Type:          Program or Sub-Routine                        *
*                                                                     *
* Language:             High Level Assembler                          *
*                                                                     *
* Attributes:           Key 8                                         *
*                       Problem State                                 *
*                       Re-Entrant                                    *
*                       AMODE(31)                                     *
*                       RMODE(31)                                     *
*                       BAKR/PR                                       *
*                       ISPF Environment                              *
*                                                                     *
* Entry point:          LISTVTOC                                      *
*                                                                     *
* Input Parms: (PGM)    None                                          *
* Input Parms: (SUB)    W1 --> INIT/DATA/TERM                         *
*                       W2 --> Data Buffer                            *
*                                                                     *
* Input DD:             VTOCDD                                        *
*                       The VTOCDD is used solely to identify the     *
*                       volume serial that is to be listed.           *
*                                                                     *
* Output DD:            SYSPRINT                                      *
*                       The SYSPRINT file contains the VTOC listing   *
*                                                                     *
* Return codes:         Zero                                          *
*                                                                     *
* Abend codes:          U0001 - Open of VTOCDD failed                 *
*                       U0002 - Read of VTOCDD failed                 *
*                       U0003 - Error in CVAF processing              *
*                                                                     *
* Register Usage:       R0  - Work                                    *
*                       R1  - Work                                    *
*                       R2  - Work                                    *
*                       R3  - Work                                    *
*                       R4  - Work                                    *
*                       R5  - Work                                    *
*                       R6  - Work                                    *
*                       R7  - Work                                    *
*                       R8  - Work                                    *
*                       R9  - Secondary Sub-Routine Return Address    *
*                       R10 - Primary Sub-Routine Return Address      *
*                       R11 - Work                                    *
*                       R12 - Base Register #1                        *
*                       R13 - Working Storage Base Register           *
*                       R14 - Return Address and Work                 *
*                       R15 - Entry Point, Return Code and Work       *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* Author:               Paul Gillis, P. C. Link Pty. Ltd.             *
*                                                                     *
* Change activity:                                                    *
*                                                                     *
* V01    26/03/2005     Initial Version                               *
* V02    28/03/2005     Fully 31/31 and re-entrant                    *
*                                                                     *
*---------------------------------------------------------------------*
                                       SPACE 1
LISTVTOC CSECT
LISTVTOC AMODE 31
LISTVTOC RMODE 31
                                       SPACE 1
         USING LISTVTOC,R15
         B     SKIPEYE                 ===> Skip the Eyeball
WSLENGTH DC    A(GSLENG)               Working STorage Length
EYEBALL  DC    CL28'LISTVTOC V02 &SYSDATC &SYSTIME'
SKIPEYE  DS    0H
         BAKR  R14,0
         LAE   R12,0(R15,0)            Set up Base Reg (GR and AR)
         DROP  R15
         USING LISTVTOC,R12
         TM    0(R1),X'80'             Standard Parameter List
         BO    SKIPPARM                ===> Yes, I'm a standard program
                                       SPACE 1
         L     R2,4(R1)                Pointer to obtained storage
         L     R13,0(R2)               A(obtained storage)
         USING GS,R13
         L     R2,0(R1)                Save the Parameter Register
         MVC   CALLPARM,0(R2)          First character of 1st parm
         B     SKIPF1SA                Skip standard stuff
                                       SPACE 1
SKIPPARM DS    0H
         L     R0,WSLENGTH             Storage Length
         STORAGE OBTAIN,LENGTH=(0),LOC=BELOW,BNDRY=PAGE
         LR    R13,R1                  Address the work Area
         LR    R0,R1                   Clear obtained storage
         L     R1,WSLENGTH             Clear obtained storage
         SR    R15,R15                 Clear obtained storage
         MVCL  R0,R14                  Clear obtained storage
         MVC   F1SA,=C'F1SA'           Indicate BAKR/PR used
                                       SPACE 1
SKIPF1SA DS    0H
                                       SPACE 1
*---------------------------------------------------------------------*
*        Determine order of processing                                *
*---------------------------------------------------------------------*
                                       SPACE 1
         CLI   CALLPARM,C'I'           Initialise data and open files
         BE    CALLINIT                ===> Yes, perform that action
         CLI   CALLPARM,C'D'           Extract a data record
         BE    CALLDATA                ===> Yes, perform that action
         CLI   CALLPARM,C'T'           Clean up and close files
         BE    CALLTERM                ===> Yes, perform that action

         BAL   R10,INIT                ===> Initialise and open files
CALLLOOP DS    0H
         BAL   R10,DATA                ===> Get data records
         LTR   R15,R15                 EOD?
         BZ    CALLLOOP                ===> No, keep looping
         BAL   R10,TERM                ===> Clean up and close files
         L     R0,WSLENGTH             Obtained storage length
         LR    R1,R13                  Obtained storage address
         STORAGE RELEASE,LENGTH=(0),ADDR=(1)
         XR    R15,R15                 Set Return Code
         PR    ,                       Return to caller
                                       SPACE 1
CALLINIT DS    0H
         BAL   R10,INIT                ===> Initialise and open files
         PR    ,                       Return to caller
                                       SPACE 1
CALLDATA DS    0H
         BAL   R10,DATA                ===> Get data records
         PR    ,                       Return to caller
                                       SPACE 1
CALLTERM DS    0H
         BAL   R10,TERM                ===> Clean up and close files
         PR    ,                       Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        INIT: Open The VTOC                                          *
*---------------------------------------------------------------------*
                                       SPACE 1
INIT     DS    0H
         CLI   CALLPARM,0              Sub or Std?
         BNE   INIT0010                ===> Sub, skip SYSPRINT
         MVC   SYSPRINT,SYSPRINTC      Move DCB below the line
         MVC   SYSPRINTE,SYSPRINTEC    Move DCBE below the line
         LA    R1,SYSPRINTE            A(DCBE)
         ST    R1,SYSPRINT             And save it in the DCB
         XC    SYSPRINTO,SYSPRINTO     Zero the list
         OI    SYSPRINTO,X'80'         Indicate last in the list
         OPEN  (SYSPRINT,(OUTPUT)),MODE=31,MF=(E,SYSPRINTO)
         MVI   RECORD,C' '             Clear the output record
         MVC   RECORD+1(L'RECORD-1),RECORD
INIT0010 DS    0H
                                       SPACE 1
         MVC   VTOCDD,VTOCDDC          Move DCB below the line
         LA    R2,VTOCDD               Address the DCB
         USING IHADCB,R2
         LA    R3,JFCBAREA             Address the JFCB
         ST    R3,JEXLST               Save in the exit list
         MVI   JEXLST,X'87'            Insert the JFCB call
         LA    R1,JEXLST               A(Exit List)
         STCM  R1,7,DCBEXLSA           And save it in the DCB
         USING JFCB,R3
         XC    VTOCDDO,VTOCDDO         Zero the list
         OI    VTOCDDO,X'80'           Indicate last in the list
         RDJFCB VTOCDD,MF=(E,VTOCDDO)
         LTR   R15,R15                 Read OK?
         BNZ   INIT0020                ===> No, Abend
         MVI   JFCBDSNM,X'04'          Want to read the VTOC
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM  Fill with hex 04
         OI    JFCBTSDM,JFCNWRIT       Do not rewrite it
         DROP  R3
         OPEN  (VTOCDD,(INPUT)),TYPE=J,MF=(E,VTOCDDO)
         TM    DCBOFLGS,DCBOFOPN       Open Work OK?
         BO    INIT0030                ===> No, Abend
         WTO   'LISTVTOC-01 Open of VTOCDD Failed',ROUTCDE=(11)
         ABEND 1,DUMP                  OPEN DCB failure
INIT0020 DS    0H
         WTO   'LISTVTOC-02 Read VTOCDD JFCB Failed',ROUTCDE=(11)
         ABEND 2,DUMP                  RDJFCB failure
INIT0030 DS    0H
         XR    R5,R5                   Zero F1 DSCB Counter
         XR    R4,R4                   Zero the register for DEB
         XR    R3,R3                   Zero the return code
         ICM   R4,7,DCBDEBA            Insert the DEB address
         DROP  R2
                                       SPACE 1
*---------------------------------------------------------------------*
*        INIT: Get the first VTOC record                              *
*---------------------------------------------------------------------*
                                       SPACE 1
         XC   BUFLIST(BFLHLN+BFLELN),BUFLIST Zero Buffer List
         OI   BFLHFL,BFLHDSCB          Read DSCB
         MVI  BFLHNOE,1                One Buffer List Entry
         LA   R1,DS1FMTID              Address of DSCB buffer
         ST   R1,BFLEBUF               Insert into Buffer List
         MVI  BFLELTH,DSCBLTH          Read data portion of DSCB
         MVC   CVPL,CVPLC              Copy the CVPL below the line
         LA   R7,CVPL                  Save the address of the map
         USING CVPLMAP,R7              R1 is set by CVAF
         CVAFSEQ DEB=(R4),MF=(E,CVPL),BUFLIST=BUFLIST,DSN=DS1DSNAM
         BAL   R9,STATUSCK             ===> Check Call Status
         LTR   R15,R15                 EOD?
         BNZR  R10                     ===> Return to caller
         BAL   R9,VTOCDATA             ===> Process the Data
         BR    R10                     ===> Return to caller
         DROP  R7
                                       SPACE 1
*---------------------------------------------------------------------*
*        DATA: Process the next data record                           *
*---------------------------------------------------------------------*
                                       SPACE 1
DATA     DS    0H
         CVAFSEQ ACCESS=GT,MF=(E,CVPL),BUFLIST=BUFLIST,DSN=DS1DSNAM
         BAL   R9,STATUSCK             ===> Check Call Status
         LTR   R15,R15                 EOD?
         BNZR  R10                     ===> Return to caller
         BAL   R9,VTOCDATA             ===> Process the Data
         XR    R15,R15                 Set RC=0
         BR    R10                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        TERM: Free up VTOC CVAF resources                            *
*---------------------------------------------------------------------*
                                       SPACE 1
TERM     DS    0H
         CVAFDIR ACCESS=RLSE,          Release CVAF buffers and IOArea *
               BUFLIST=0,              dont release user buffer list   *
               IXRCDS=NOKEEP,          release VIER buffers            *
               MF=(E,CVPL)
         CLOSE VTOCDD,MF=(E,VTOCDDO)
         CLOSE SYSPRINT,MODE=31,MF=(E,SYSPRINTO)
         BR    R10                     ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        Secondary Sub-Routines: VTOC Error Checking                  *
*---------------------------------------------------------------------*
                                       SPACE 1
STATUSCK DS   0H
         LA   R7,CVPL                  Save the address of the map
         USING CVPLMAP,R7              R1 is set by CVAF
         LTR  R15,R15                  Any errors detected
         BZR   R9                      ===> No, process the DSCB
                                       SPACE 1
         C     R15,=F'4'               RC=4?
         BNE   OTHERERR                ===> No, More Serious Error
         CLI   CVSTAT,STAT032          Status=EOD?
         BER   R9                      ===> Yes, All done
         LTR   R5,R5                   Read any VTOC entries
         BNZR  R9                      ===> Yes, ignore the error
                                       SPACE 1
OTHERERR DS   0H
         LA   R3,1(0,0)                R3=1
         LNR  R3,R3                    Negative count = Error
         LR   R6,R15                   Retain the RC
         XR   R8,R8                    Retain the RC
         IC   R8,CVSTAT                Get the CVAF status
         WTO   'LISTCSI-03 Error in CVAF processing',ROUTCDE=(11)
         WTO   'LISTCSI-03 RC in R8, CVSTAT in R6',ROUTCDE=(11)
         ABEND 3,DUMP                  Die horribly scumbag
         DROP R7
                                       SPACE 1
*---------------------------------------------------------------------*
*        Secondary Sub-Routines: VTOC Data Handling                   *
*---------------------------------------------------------------------*
                                       SPACE 1
VTOCDATA DS    0H
         CLI   CALLPARM,0              Do I want to do this
         BE    VTOC0010                ===> No, skip it
         BR    R9
VTOC0010 DS    0H
         CLI   DS1DSNAM,X'04'          F4 DSCB
         BER   R9                      ===> Yes, Ignore it
         MVC   RECORD(L'DS1DSNAM),DS1DSNAM
         PUT   SYSPRINT,RECORD
         BR    R9                      ===> Return to caller
                                       SPACE 1
*---------------------------------------------------------------------*
*        Constants and Literals                                       *
*---------------------------------------------------------------------*
                                       SPACE 1
         LTORG ,
         CNOP  0,8                     Terminate on a Double Word Bdy.
                                       SPACE 1
*---------------------------------------------------------------------*
*        Working Storage                                              *
*---------------------------------------------------------------------*
                                       SPACE 1
CVPLC    CVAFSEQ ACCESS=GTEQ,          Read DSCB                       *
               IXRCDS=KEEP,            Keep VIER in storage            *
               MF=L
CVPLL    EQU   *-CVPLC                 Length of CVPL
                                       SPACE 1
SYSPRINTC DCB  MACRF=PM,DSORG=PS,DDNAME=SYSPRINT,RECFM=FB,             X
               LRECL=80,DCBE=SYSPRINTEC
SYSPRINTL  EQU *-SYSPRINTC
SYSPRINTEC DCBE RMODE31=BUFF
SYSPRINTEL EQU *-SYSPRINTEC
                                       SPACE 1
VTOCDDC  DCB   DDNAME=VTOCDD,MACRF=(E),EXLST=VTOCDDC
VTOCDDL  EQU   *-VTOCDDC
                                       SPACE 1
*---------------------------------------------------------------------*
*        Working Storage                                              *
*---------------------------------------------------------------------*
                                       SPACE 1
GS       DSECT
SAVEAREA DS    F                       Save area for called routines
F1SA     DS    F                       F1SA indicates BAKR/PR used
         DS    16F                     GPR save area
         IECSDSL1 (1)                  F1 DSCB
DSCBLTH  EQU  *-IECSDSL1-L'DS1DSNAM    Length of data portion of DSCB
         DC    18F'0'                  Overlaid Storage
                                       SPACE 1
SYSPRINTO DS   D                       Open Parameter List
SYSPRINT  DS   CL(SYSPRINTL)           DCB
SYSPRINTE DS   CL(SYSPRINTEL)          DCBE
                                       SPACE 1
VTOCDDO  DS    D                       Open Parameter List
VTOCDD   DS    CL(VTOCDDL)             DCB
JEXLST   DS    X'87',AL3(JFCBAREA)     Exit List
JFCBAREA DS    XL176                   Area for the JFCB to be stored
                                       SPACE 1
BUFLIST  ICVAFBFL DSECT=NO             Buffer List
CVPL     DS    CL(CVPLL)               CVPL
                                       SPACE 1
CALLPARM DS    C                       1st character of 1st parm
RECORD   DS    CL80                    Output Record
                                       SPACE 1
         CNOP  0,8                     Terminate on a Double Word Bdy.
GSLENG   EQU   *-GS                    Length of Storage to obtain
                                       SPACE 1
*---------------------------------------------------------------------*
*        DSECTs                                                       *
*---------------------------------------------------------------------*
                                       SPACE 1
         TITLE 'CB-Map CVAF Parameter List'
CVPLMAP  ICVAFPL DSECT=YES             Map the CVPL
         TITLE 'CB-Map DCBD'
         DCBD  DEVD=DA,DSORG=PS
         TITLE 'CB-Map JFCB'
JFCB     DSECT
         IEFJFCBN
         TITLE 'YREGS'
         YREGS
         END
